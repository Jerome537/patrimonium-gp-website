#!/usr/bin/env node

/**
 * Script pour cr√©er les bases de donn√©es Notion et les peupler avec des donn√©es d'exemple
 * Usage: npm run seed
 */

const { Client } = require('@notionhq/client')
require('dotenv').config({ path: '.env.local' })

// Configuration de la page parent o√π cr√©er les bases
const PARENT_PAGE_ID = '24452e2233a08051a4cfd956dd251895'

const notion = new Client({
  auth: process.env.NOTION_TOKEN,
})

// Exemples de donn√©es
const articlesData = [
  {
    title: 'Optimisation fiscale en Polyn√©sie fran√ßaise : les nouveaut√©s 2024',
    slug: 'optimisation-fiscale-polynesie-2024',
    excerpt: 'D√©couvrez les derni√®res mesures fiscales et comment en tirer parti pour votre patrimoine.',
    published: true,
    publishedAt: new Date('2024-01-15'),
    tags: ['Fiscalit√©', 'Polyn√©sie', 'Actualit√©s'],
    author: 'Jean Dupont',
  },
  {
    title: 'Pr√©parer sa retraite : les meilleures strat√©gies d\'investissement',
    slug: 'preparer-retraite-strategies-investissement',
    excerpt: 'Guide complet pour construire un patrimoine solide en vue de votre retraite.',
    published: true,
    publishedAt: new Date('2024-01-10'),
    tags: ['Retraite', 'Investissement', 'Conseils'],
    author: 'Marie Martin',
  },
  {
    title: 'Transmission de patrimoine : anticiper pour prot√©ger ses proches',
    slug: 'transmission-patrimoine-anticiper',
    excerpt: 'Les cl√©s pour une transmission optimis√©e de votre patrimoine √† vos h√©ritiers.',
    published: true,
    publishedAt: new Date('2024-01-05'),
    tags: ['Succession', 'Transmission', 'Famille'],
    author: 'Jean Dupont',
  },
]

const servicesData = [
  {
    title: 'Gestion de patrimoine',
    summary: 'Une approche globale et personnalis√©e pour optimiser votre patrimoine.',
    order: 1,
    keywords: ['patrimoine', 'gestion', 'conseil', 'optimisation'],
    visible: true,
  },
  {
    title: 'Optimisation fiscale',
    summary: 'R√©duisez l√©galement votre charge fiscale gr√¢ce √† nos strat√©gies sur mesure.',
    order: 2,
    keywords: ['fiscalit√©', 'imp√¥ts', 'optimisation', 'd√©fiscalisation'],
    visible: true,
  },
  {
    title: 'Pr√©paration retraite',
    summary: 'Construisez d√®s aujourd\'hui le patrimoine qui financera votre retraite.',
    order: 3,
    keywords: ['retraite', '√©pargne', 'pr√©voyance', 'revenus compl√©mentaires'],
    visible: true,
  },
  {
    title: 'Transmission de patrimoine',
    summary: 'Anticipez et optimisez la transmission de vos biens √† vos h√©ritiers.',
    order: 4,
    keywords: ['succession', 'donation', 'transmission', 'h√©ritage'],
    visible: true,
  },
  {
    title: 'Investissement immobilier',
    summary: 'D√©veloppez votre patrimoine immobilier avec notre expertise locale.',
    order: 5,
    keywords: ['immobilier', 'investissement', 'location', 'd√©fiscalisation'],
    visible: true,
  },
  {
    title: 'Protection du conjoint',
    summary: 'S√©curisez l\'avenir de votre conjoint avec des solutions adapt√©es.',
    order: 6,
    keywords: ['protection', 'conjoint', 'pr√©voyance', 'assurance'],
    visible: true,
  },
]

const teamData = [
  {
    name: 'Jean Dupont',
    role: 'Fondateur & Directeur',
    bio: 'Expert en gestion de patrimoine avec plus de 20 ans d\'exp√©rience.',
    email: 'jean.dupont@patrimonium.nc',
    phone: '+689 40 XX XX XX',
    linkedin: 'https://linkedin.com/in/jeandupont',
    order: 1,
    visible: true,
  },
  {
    name: 'Marie Martin',
    role: 'Conseill√®re patrimoniale senior',
    bio: 'Sp√©cialiste en optimisation fiscale et transmission de patrimoine.',
    email: 'marie.martin@patrimonium.nc',
    phone: '+689 40 XX XX XX',
    linkedin: 'https://linkedin.com/in/mariemartin',
    order: 2,
    visible: true,
  },
  {
    name: 'Pierre Tahiti',
    role: 'Conseiller en investissements',
    bio: 'Expert des march√©s financiers locaux et internationaux.',
    email: 'pierre.tahiti@patrimonium.nc',
    phone: '+687 XX XX XX',
    linkedin: 'https://linkedin.com/in/pierretahiti',
    order: 3,
    visible: true,
  },
]

async function createDatabase(parentPageId, title, properties) {
  try {
    const response = await notion.databases.create({
      parent: { page_id: parentPageId },
      title: [
        {
          type: 'text',
          text: {
            content: title,
          },
        },
      ],
      properties,
    })
    
    console.log(`‚úÖ Base de donn√©es "${title}" cr√©√©e avec l'ID: ${response.id}`)
    return response.id
  } catch (error) {
    console.error(`‚ùå Erreur lors de la cr√©ation de la base "${title}":`, error)
    throw error
  }
}

async function seedArticles(databaseId) {
  for (const article of articlesData) {
    try {
      await notion.pages.create({
        parent: { database_id: databaseId },
        properties: {
          Title: {
            title: [
              {
                text: {
                  content: article.title,
                },
              },
            ],
          },
          Slug: {
            rich_text: [
              {
                text: {
                  content: article.slug,
                },
              },
            ],
          },
          Excerpt: {
            rich_text: [
              {
                text: {
                  content: article.excerpt,
                },
              },
            ],
          },
          Published: {
            checkbox: article.published,
          },
          PublishedAt: {
            date: {
              start: article.publishedAt.toISOString(),
            },
          },
          Tags: {
            multi_select: article.tags.map(tag => ({ name: tag })),
          },
          Author: {
            rich_text: [
              {
                text: {
                  content: article.author,
                },
              },
            ],
          },
        },
      })
      console.log(`‚úÖ Article "${article.title}" cr√©√©`)
    } catch (error) {
      console.error(`‚ùå Erreur lors de la cr√©ation de l'article "${article.title}":`, error)
    }
  }
}

async function seedServices(databaseId) {
  for (const service of servicesData) {
    try {
      await notion.pages.create({
        parent: { database_id: databaseId },
        properties: {
          Title: {
            title: [
              {
                text: {
                  content: service.title,
                },
              },
            ],
          },
          Summary: {
            rich_text: [
              {
                text: {
                  content: service.summary,
                },
              },
            ],
          },
          Order: {
            number: service.order,
          },
          Keywords: {
            multi_select: service.keywords.map(keyword => ({ name: keyword })),
          },
          Visible: {
            checkbox: service.visible,
          },
        },
      })
      console.log(`‚úÖ Service "${service.title}" cr√©√©`)
    } catch (error) {
      console.error(`‚ùå Erreur lors de la cr√©ation du service "${service.title}":`, error)
    }
  }
}

async function seedTeam(databaseId) {
  for (const member of teamData) {
    try {
      await notion.pages.create({
        parent: { database_id: databaseId },
        properties: {
          Name: {
            title: [
              {
                text: {
                  content: member.name,
                },
              },
            ],
          },
          Role: {
            rich_text: [
              {
                text: {
                  content: member.role,
                },
              },
            ],
          },
          Bio: {
            rich_text: [
              {
                text: {
                  content: member.bio,
                },
              },
            ],
          },
          Email: {
            email: member.email,
          },
          Phone: {
            phone_number: member.phone,
          },
          LinkedIn: {
            url: member.linkedin,
          },
          Order: {
            number: member.order,
          },
          Visible: {
            checkbox: member.visible,
          },
        },
      })
      console.log(`‚úÖ Membre d'√©quipe "${member.name}" cr√©√©`)
    } catch (error) {
      console.error(`‚ùå Erreur lors de la cr√©ation du membre "${member.name}":`, error)
    }
  }
}

async function main() {
  console.log('üöÄ D√©but du seeding Notion...\n')

  if (!process.env.NOTION_TOKEN) {
    console.error('‚ùå NOTION_TOKEN non d√©fini dans les variables d\'environnement')
    process.exit(1)
  }

  console.log('üìù Instructions pour utiliser ce script :\n')
  console.log('1. Cr√©ez d\'abord les 3 bases de donn√©es manuellement dans Notion :')
  console.log('   - Base "Articles" avec les propri√©t√©s : Title, Slug, Excerpt, Cover, Published, PublishedAt, Tags, Author')
  console.log('   - Base "Services" avec les propri√©t√©s : Title, Summary, Icon, Order, Keywords, Visible')
  console.log('   - Base "√âquipe" avec les propri√©t√©s : Name, Role, Bio, Photo, Email, Phone, LinkedIn, Order, Visible')
  console.log('\n2. R√©cup√©rez les IDs de chaque base :')
  console.log('   - Ouvrez la base dans Notion')
  console.log('   - Copiez l\'URL (ex: https://notion.so/xxxxx?v=yyyy)')
  console.log('   - L\'ID est la partie avant le ? (xxxxx)')
  console.log('\n3. Ajoutez ces IDs dans votre fichier .env.local :')
  console.log('   NOTION_DB_ARTICLES_ID=xxxxx')
  console.log('   NOTION_DB_SERVICES_ID=xxxxx')
  console.log('   NOTION_DB_TEAM_ID=xxxxx')
  console.log('\n4. Relancez ce script pour peupler les bases avec des donn√©es d\'exemple')

  // Si les IDs sont d√©finis, on peuple les bases
  if (process.env.NOTION_DB_ARTICLES_ID && process.env.NOTION_DB_SERVICES_ID && process.env.NOTION_DB_TEAM_ID) {
    console.log('\n‚úÖ IDs des bases d√©tect√©s, peuplement en cours...\n')
    
    console.log('üìÑ Ajout des articles...')
    await seedArticles(process.env.NOTION_DB_ARTICLES_ID)
    
    console.log('\nüîß Ajout des services...')
    await seedServices(process.env.NOTION_DB_SERVICES_ID)
    
    console.log('\nüë§ Ajout des membres de l\'√©quipe...')
    await seedTeam(process.env.NOTION_DB_TEAM_ID)

    console.log('\n‚ú® Seeding termin√© avec succ√®s !')
    console.log('\nüìã Prochaines √©tapes :')
    console.log('1. Ajoutez du contenu aux pages Notion cr√©√©es (body des articles et services)')
    console.log('2. Ajoutez des images de couverture aux articles et photos aux membres')
    console.log('3. Partagez les bases avec votre int√©gration Notion')
    console.log('4. Lancez npm run dev pour voir votre site !')
  } else {
    console.log('\n‚ö†Ô∏è  Les IDs des bases ne sont pas encore configur√©s.')
    console.log('Suivez les instructions ci-dessus puis relancez le script.')
  }
}

// Run the script
main().catch(console.error)
